$_bi_d: -1 !default;
@function parse-sides-to-list($a1,$a2:$_bi_d,$a3:$_bi_d,$a4:$_bi_d) {
    $args: arguments($a1,$a2,$a3,$a4);
    $args: list-change-separator($args, ' ');
    $args: list-safe-unquote-items($args);
    $args: if(type-of($a1) == list and $a2 == $_bi_d, $a1, $args);

    $good: if(length($args) > 0 and length($args) < 5, true, false);
    @for $i from 1 through length($args) {
        $on: nth($args,$i);
        @if length($args) == 1 and is-reserved-variable($on) {
            $good: $good;
        } @else if is-length($on) or is-percent($on) {
            $good: $good;
        } @else { $good: false; }}

    $top: 0;
    $left: 0;
    $right: 0;
    $bottom: 0;

    @if $good {
        @if length($args) == 1 {
            $top: nth($args, 1);
            $bottom: nth($args, 1);
            $left: nth($args, 1);
            $right: nth($args, 1);
        } @else if length($args) == 2 {
            $top: nth($args, 1);
            $bottom: nth($args, 1);
            $left: nth($args, 2);
            $right: nth($args, 2);
        } @else if length($args) == 3 {
            $top: nth($args, 1);
            $left: nth($args, 2);
            $right: nth($args, 2);
            $bottom: nth($args, 3);
        } @else if length($args) == 4 {
            $top: nth($args, 1);
            $right: nth($args, 2);
            $bottom: nth($args, 3);
            $left: nth($args, 4); 
        }
        $list: ();
        $list: append($list, $top);
        $list: append($list, $right);
        $list: append($list, $bottom);
        $list: append($list, $left);
        $list: list-change-separator($list);
        @return $list;
    } @else {
        @return false;
    }
}
