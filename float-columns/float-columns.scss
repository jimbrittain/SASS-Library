//requires measure and math
//does not affect second child, must be done individually including on responsive
@mixin float-column($direction, $child, $width, $base:$base-font-size, $target-unit:"em"){
  $left: if($direction == "right", false, true);
  $base: if(type-of($base) == "number", $base, $base-font-size);
  
  $margin-left:0;
  $margin-right: 0;
  $child-width: 0;
  $child-base: $base;
  $full-width: 0;
  
  $other_child: false;
  
  @if(type-of($child) == 'list' and length($child) == 2){
    $other_child: nth($child, 2);
    $child: nth($child,1);
  } @else if(type-of($child) == 'string'){
    $child: $child;
  } @else { $child: false; }
  
  @if(type-of($width) == 'list'){ //width,margin-left,margin-right,base || width,margin-left,margin-right || width,margin-both || width
    @if(length($width) == 4){
      $child-width: if(type-of(nth($width,1)) == "number", nth($width,1), 0);
      $margin-left: if(type-of(nth($width,2)) == "number", nth($width,2), 0);
      $margin-right: if(type-of(nth($width,3)) == "number", nth($width,3), 0);
      $child-base: if(type-of(nth($width,4)) == "number", nth($width,4), false);
    } @else if(length($width) == 3){
      $child-width: if(type-of(nth($width,1)) == "number", nth($width,1), 0);
      $margin-left: if(type-of(nth($width,2)) == "number", nth($width,2), 0);
      $margin-right: if(type-of(nth($width,3)) == "number", nth($width,3), 0);
      $child-base: $base;
    } @else if(length($width) == 2){
      $child-width: if(type-of(nth($width,1)) == "number", nth($width,1), 0);
      $margin-left: if(type-of(nth($width,2)) == "number", nth($width,2), 0);
      $margin-right: $margin-left;
      $child-base: $base;
    } @else if(length($width) == 1){
      $child-width: if(type-of(nth($width,1)) == "number", nth($width,1), 0);
      $child-base: $base;
    }
  } @else if(type-of($width) == 'number'){
    $child-width: $width;
    $child-base: $base; }
  
  @if($child-width > 0){
    $margin-left: measure($margin-left, 'px', $base);
    
    $margin-right: measure($margin-right, 'px', $base);
    $child-width: measure($child-width, 'px', $base);
    $full-width: addnumbers($child-width,$margin-left,$margin-right);
    
    //Parent Definitions
    @include float_fix;
    @if($left == true){
      padding-left: measure($full-width, $target-unit, $base);
    } @else {
      padding-right: measure($full-width, $target-unit, $base);
    }
    //Child Definitions
    & #{$child} {
      float: if($left, left, right);
      @if($left == true){
        margin-left: measure(subtractnumbers(0px,$child-width,$margin-right),$target-unit,$child-base);
      } @else {
        margin-right: measure(subtractnumbers(0px,$child-width,$margin-left),$target-unit,$child-base);
      }
    }
    //Other Child
    @if($other_child != false){
      & #{$other_child} {
        float: if($left == true, left, right);
      }
    }
  } @else { @warn "float_colmun: not initialised correctly, child-width is 0"; }}

@mixin stop_float_column($direction, $child, $pad:0px){
 $other_child: false;
  @if(type-of($child) == 'list' and length($child) == 2){
    $other_child: nth($child, 2);
    $child: nth($child,1);
  } @else if(type-of($child) == 'string'){
    $child: $child;
  } @else { $child: false; }
  
  $left: if($direction == "right", false, true);
  $padleft: false;
  $padright: false;
  //$pad: if(type-of($pad) == "number", $pad, 0px);
  @if(type-of($pad) == 'list' and length($pad) == 2){
    $padleft: if(type-of(nth($pad,1)) == 'number', nth($pad,1), 0px);
    $padright: if(type-of(nth($pad,2)) == 'number', nth($pad,2), 0px);
  } @else if(type-of($pad) == 'number'){
    $pad: $pad;
  } @else { $pad: 0px; }
  
  @if($padleft != false){
    padding-left: $padleft;
    padding-right: $padright;
  } @else {
    @if($left == true){
      padding-left: $pad;
    } @else { padding-right: $pad; }
  }
  
  //@if($left == true){ $padding-left: $pad; }
  
  
  & #{$child} {
    float: none;
    @if($left == true){
      margin-left: 0px;
    } @else { margin-right: 0px; }}
  @if($other_child != false){
    & #{$other_child} { float: if($left == true, left, right); }
  }
}
