//requires list-create-exclude, strip-units, zeromeasure, measure (and measure subords)
@function divide-numbers($a1:a, $a2:a, $a3:a, $a4:a, $a5:a, $a6:a, $a7:a, $a8:a, $a9:a, $a10:a, $a11:a, $a12:a, $a13:a, $a14:a, $a15:a, $a16:a, $a17:a, $a18:a, $a19:a){
    $args_list: list-create-exclude(a, $a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8,$a9,$a10,$a11,$a12,$a13,$a14,$a15,$a16,$a17,$a18,$a19);
    $fallback_list: if(type-of($a1) == 'list', $a1, ());
    $args_list: if(length($args_list) < length($fallback_list), $fallback_list, $args_list);
    $result: 0;
    $first_value: nth($args_list, 1);
    $result: if(type-of($first_value) == 'number', $first_value, 0);
    $no_base: true;
    $base_unit: 'px';
    @if unitless($result) == false { 
        $no_base: false;
        $base_unit: unit($result); }
    $result: strip-units($result);
    @if(length($args_list) > 1){
        @for $i from 2 through length($args_list) {
            $value: nth($args_list, $i);
            @if type-of($value) == 'number' {
                @if comparable($value, $first_value) and not(unitless($first_value)) {
                    $result: zeromeasure($base_unit) + $result;
                    $result: $result/$value;
                    $result: strip-units($result);
                } @else {
                    @if(unitless($value)){
                        @if($no_base == false){
                            $value: zeromeasure($base_unit) + $value;
                            $value: strip-units($value); }
                    } @else {
                        $value: measure($value, $base_unit);
                        $value: if(unitless($value) == false, strip-units($value), $value); }
                $test_result: $result / $value;
                @if type-of($test_result) == 'number' {
                    $result: $test_result;
                } @else { @warn "Unable to divide '" + $value "' to '" + $result; }}
        } @else {
            @if $value != 0 { 
                @warn $value + " is not a valid number for division."; }}}}
    @return if($no_base == true, 0, zeromeasure($base_unit)) + $result; }

@function dividenumbers($a1:a, $a2:a, $a3:a, $a4:a, $a5:a, $a6:a, $a7:a, $a8:a, $a9:a, $a10:a, $a11:a, $a12:a, $a13:a, $a14:a, $a15:a, $a16:a, $a17:a, $a18:a, $a19:a){
    @return divide-numbers($a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8,$a9,$a10,$a11,$a12,$a13,$a14,$a15,$a16,$a17,$a18,$a19); }
