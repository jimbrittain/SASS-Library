$_bi_d: -1 !default;
$arrow_list: ();

@function reverse_direction($dir, $reverse:true){
  @if($dir == 'right'){ @return if($reverse, 'left', 'right'); }
  @if($dir == 'left'){ @return if($reverse, 'right', 'left'); }
  @if($dir == 'top'){ @return if($reverse, 'bottom', 'top'); }
  @if($dir == 'bottom'){ @return if($reverse, 'top', 'bottom'); }
  @return 'top'; //failure state
}

@mixin prepare_arrowhead($size, $base:$base-font-size){
  $half-size: 0.5em;
  @if(type-of($size) != 'number' or $size < 0){ $size: 1em; } @else { $half-size: measure(dividenumbers($size,2), unit($size), $base); }
  line-height: 1em;
  position: relative; }

@mixin single_arrowhead($a1,$a2:$_bi_d,$a3:$_bi_d,$a4:$_bi_d,$a5:$_bi_d,$a6:$_bi_d,$a7:$_bi_d,$a8:$_bi_d,$a9:$_bi_d){
    $args: arguments($a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8,$a9);
    $color: '';
    $direction: '';
    $size: '';
    $inset: '';
    $invert: '';
    $base: '';
    
    @for $i from 1 through length($args){
        $on: nth($args, $i);
        @if(type-of($on) == 'color'){
            $color: $on;
        } @else if(type-of($on) == 'number'){
            @if($size == ''){
                $size: $on;
            } @else { $base: $on; }
        } @else if is-direction($on) {
            $direction: $on;
        } @else if($on == 'invert'){
            $invert: true;
        } @else if($on == 'inset'){
            $inset: true;
        } @else if($on == true){
            @if($inset == ''){
                $inset: true;
            } @else { $invert: true; }
        } @else if($on == false){
            @if($inset == ''){
                $inset: false;
            } @else { $invert: false; }}}

    $color: if(type-of($color) != 'color', black, $color);
    $direction: if(is-direction($direction), $direction, 'right');
    $size: if(type-of($size) != 'number' or $size < 0, 1em, $size);
    $inset: if($inset != true, false, true);
    $ivert: if($invert != true, false, true);
    $base: if(type-of($base) != 'number', $base-font-size, $base);

    $arrow-size: measure(1em, unit($size), $base);
    $arrow-size: addnumbers($arrow-size, $size);
    $arrow-size: dividenumbers($arrow-size, 2);

    margin-#{$direction}: $arrow-size;

    $orientation: if($direction == 'right' or $direction == 'left', 'horizontal', 'vertical');
    $selector-str: if($direction == 'right' or $direction == 'bottom', "&:after, &::after", "&:before, &::before");
    $orientation-color: if($inset == true, $color, transparent);

    @if($orientation == 'horizontal'){
        $half-size: 0.5em;
        $half-size: dividenumbers($size,2);
        padding-top: $half-size; }

    #{$selector-str} {
        content: '';
        width: 0;
        height: 0; 
        position: absolute;
        speak: none;
        @if($orientation == 'vertical'){
          margin-left: subtractnumbers(0,$arrow-size);
          left: 50%; 
          border-left: $arrow-size solid $orientation-color;
          border-right: $arrow-size solid $orientation-color;
        } @else {
          top: 0;
          border-top: $arrow-size solid $orientation-color;
          border-bottom: $arrow-size solid $orientation-color;
      }
    }
    $opp-on: true;
    $opp-on: if($inset, toggle_boolean($opp-on), $opp-on);
    $opp-on: if($invert, toggle_boolean($opp-on), $opp-on);
    $border-target: reverse_direction($direction, $opp-on);
    $sub-target: $direction;
    $opp-color: if($inset, transparent, $color);
    border-#{$border-target}: $arrow-size solid $opp-color;
    $arrow-pos: $arrow-size;
    $arrow-pos: if($direction == 'top' or $direction == 'bottom', dividenumbers($arrow-size,1), $arrow-pos);
    #{$sub-target}: subtractnumbers(0,$arrow-pos);
}

@mixin first_arrowhead($color, $direction:"right", $size:1em, $inset:false, $invert:false, $base:$base-font-size){
  @include prepare_arrowhead($size, $base);
  @include single_arrowhead($color, $direction, $size, $inset, $invert, $base); }
  
@mixin additional_arrowhead($color, $direction:"right", $size:1em, $inset:false, $invert:false, $base:$base-font-size){
  @include single_arrowhead($color, $direction, $size, $inset, $invert, $base); }

@mixin adjust_arrowhead_color($color, $direction, $inset:false){
    $inset: if($inset == 'inset' or $inset == true, true, false);
    $orientation: if($direction == 'right' or $direction == 'left', true, false);
    $orientation: if($inset == true, toggle_boolean($orientation), $orientation);
    $selector_str: if($direction == 'right' or $direction == 'bottom', "&:after, &::after", '&:before, &::before');

    #{$selector_str} {
        @if($orientation == true){
            border-left-color: $color;
            border-right-color: $color;
        } @else {
            border-top-color: $color;
            border-bottom-color: $color; }
    }}
