$_bi_d: -1 !default;
@mixin __font-feature-settings($a1:0s,$a2:$_bi_d,$a3:$_bi_d,$a4:$_bi_d,$a5:$_bi_d,$a6:$_bi_d,$a7:$_bi_d,$a8:$_bi_d,$a9:$_bi_d){
    $args: arguments($a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8,$a9);
    $args: list-safe-unquote-items($args);

    @if (length($args) == 2 and type-of(nth($args,1)) == 'string' and is-valid-font-feature-settings-value(nth($args,2))) {
        $l: ();
        $args: append($l, $args); }

    $safe-args: ();
    @if length($args) == 1 and is-reserved-variable(nth($args,1)) or nth($args,1) == 'normal' {
        $val: safe-unquote(nth($args,1));
        -moz-font-feature-settings: $val;
        -ms-font-feature-settings: $val;
        -o-font-feature-settings: $val;
        -webkit-font-feature-settings: $val;
        font-feature-settings: $val;
    } @else {
        @for $i from 1 through length($args) {
            $on: nth($args,$i);
            $prop: false;
            $val: 1;
            @if type-of($on) == 'list' and length($on) > 0 or length($on) == 2 {
                $prop: if(is-font-feature-setting-property(nth($on,1)), nth($on,1), false);
                @if (length($on) > 1) {
                    $val: valid-font-feature-setting-value(nth($on,2));
                }
            } @else if type-of($on) == 'string' { $prop: if(is-font-feature-setting-property($on), $on, false); }
            @if $prop != false {
                $safe-args: append($safe-args, ($prop $val));
            }
        }
        @if length($safe-args) > 0 {
            $stds-str: '';
            $moz-str: '';
            @for $i from 1 through length($safe-args) {
                $on: nth($safe-args, $i);
                $stds-str: if(str-length($stds-str) > 0, $stds-str + ', ', $stds-str);
                $moz-str: if(str-length($moz-str) > 0, $moz-str + ', ', $moz-str);
                $stds-str: $stds-str + ('"' + safe-unquote(nth($on,1)) + '" ' + safe-unquote(nth($on,2)));
                $moz-str: $moz-str + ('"' +(safe-unquote(nth($on,1)) + '=' + safe-unquote(nth($on,2))) + '"'); }
            -moz-font-feature-settings: #{$moz-str};
            -moz-font-feature-settings: #{$stds-str};
            -ms-font-feature-settings: #{$stds-str};
            -o-font-feature-settings: #{$stds-str};
            -webkit-font-feature-settings: #{$stds-str};
            font-feature-settings: #{$stds-str};
        }
    }
}
@function is-font-feature-setting-property($prop){
    $list: (aalt abvf abvm abvs afrc akhn blwf blwm blws calt case ccmp cfar cjct clig cpct cpsp cswh curs c2pc c2sc dist dlig dnom dtls expt falt fin2 fin3 fina flac frac fwid half haln hist hkna hlig hngl hojo hwid init isol ital jalt jp78 jp83 jp90 jp04 kern lfbd liga ljmo lnum locl ltra ltrm mark med2 medi mgrk mkmk mset nalt nlck nukt numr onum opbd ordn ornm palt pcap pkna pnum pref pres pstf psts pwid qwid rand rclt rkrf rlig rphf rtbd rtla rtlm ruby rvrn salt sinf size smcp smpl ssty stch subs sups swsh titl tjmo tnam tnum trad twid unic valt vatu vert vhal vjmo vkna vkrn vpal vrt2 vrtr zero);
    @return if(index($list,$prop) != null or str-index($prop, 'ss') == 1 or str-index($prop, 'cv') == 1, true, false); } //added stylistic check and alt-char (cv)
@function is-valid-font-feature-settings-value($val){
    @if $val == 0 or $val == 1 or $val == on or $val == off { @return true; }
    @return false; }
@function valid-font-feature-setting-value($val){
    @if $val == 0 or $val == off { @return 0; }
    @return 1; }
